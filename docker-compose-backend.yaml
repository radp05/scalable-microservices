version : '3'
services :
    mysqldb:
        image: mysql:5
        container_name: mysqldb
        ports:
            - '8050:3306'
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_USER: root
            MYSQL_DATABASE: camunda_db
        volumes:
            - './camunda/data/mysqldb/:/var/lib/mysql'
        networks:
            - scalable_network
    
    camunda-engine: 
        image: camunda/camunda-bpm-platform
        container_name: camunda-engine
        depends_on:
            - 'mysqldb'
        ports:
            - '8051:8080'
        environment:
            DB_DRIVER: com.mysql.jdbc.Driver
            DB_URL: jdbc:mysql://mysqldb:3306/camunda_db?autoReconnect:true
            DB_USERNAME: root
            DB_PASSWORD: root
            WAIT_FOR: mysqldb:3306
            WAIT_FOR_TIMEOUT: 100
        networks:
            - scalable_network
      
    egateway:
        image: express-gateway
        container_name: egateway
        working_dir: /home/app/express-gateway
        volumes: 
            - ./configuration:/home/app/common
            - ./egateway:/home/app/express-gateway
        environment:
            - NODE_ENV=production
        ports:
            - 9000:80
            - 9001:443
        command: sh -c "npm install && npm start"
        networks:
            - scalable_network
    
    mongodb:
        image: mongo
        container_name: mongodb
        environment:
            - MONGO_INITDB_DATABASE=admin
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=Root123
        ports:
            - '27017:27017'
        volumes:
            - './mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro'
            - './mongodb/data:/data/db'
        networks:
            - scalable_network
    
    ms-admin:
        image: node:lts-alpine
        container_name: admin
        working_dir: /home/app/admin-service
        volumes: 
            - "./configuration:/home/app/common"
            - "./backend/admin-service:/home/app/admin-service"
        environment:
            - NODE_ENV=production
            - LOCAL=no
        ports:
            - 8000:8000
        command: sh -c "npm install && npm start"
        depends_on: 
            - mongodb
        networks:
            - scalable_network
    
    ms-sample:
        image: node:lts-alpine
        container_name: sample
        working_dir: /home/app/sample-service
        volumes: 
            - "./configuration:/home/app/common"
            - "./backend/sample-service:/home/app/sample-service"
        environment:
            - NODE_ENV=production
            - LOCAL=no
        ports:
            - 3000:3000
        command: sh -c "npm install && npm start"
        depends_on: 
            - mongodb
        networks:
            - scalable_network

    ms-devices:
        image: node:lts-alpine
        container_name: devices
        working_dir: /home/app/devices-service
        volumes: 
            - "./configuration:/home/app/common"
            - "./backend/devices-service:/home/app/devices-service"
        environment:
            - NODE_ENV=production
            - LOCAL=no
        ports:
            - 3001:3001
        command: sh -c "npm install && npm start"
        depends_on: 
            - mongodb
        networks:
            - scalable_network

    ms-orders:
        image: node:lts-alpine
        container_name: orders
        working_dir: /home/app/orders-service
        volumes: 
            - "./configuration:/home/app/common"
            - "./backend/orders-service:/home/app/orders-service"
        environment:
            - NODE_ENV=production
            - LOCAL=no
        ports:
            - 3002:3002
        command: sh -c "npm install && npm start"
        depends_on: 
            - mongodb
        networks:
            - scalable_network
    
    ms-notifications:
        image: node:lts-alpine
        container_name: notifications
        working_dir: /home/app/notification-service
        volumes: 
            - "./configuration:/home/app/common"
            - "./backend/notification-service:/home/app/notification-service"
        environment:
            - NODE_ENV=production
            - LOCAL=no
        ports:
            - 3333:3333
        command: sh -c "npm install && npm start"
        depends_on: 
            - mongodb
        networks:
            - scalable_network
    
    ms-forms:
        image: node:lts-alpine
        container_name: forms
        working_dir: /home/app/form-builder-service
        volumes: 
            - "./configuration:/home/app/common"
            - "./backend/form-builder-service:/home/app/form-builder-service"
        environment:
            - NODE_ENV=production
            - LOCAL=no
        ports:
            - 3004:3004
        command: sh -c "npm install && npm start"
        depends_on: 
            - mongodb
        networks:
            - scalable_network
            
    ms-files:
        image: node:lts-alpine
        container_name: files
        working_dir: /home/app/file-service
        volumes: 
            - "./configuration:/home/app/common"
            - "./backend/file-service:/home/app/file-service"
        environment:
            - NODE_ENV=production
            - LOCAL=no
        ports:
            - 3005:3005
        command: sh -c "npm install && npm start"
        depends_on: 
            - mongodb
        networks:
            - scalable_network
        
    ms-tickets:
        image: node:lts-alpine
        container_name: tickets
        working_dir: /home/app/ticket-service
        volumes: 
            - "./configuration:/home/app/common"
            - "./backend/ticket-service:/home/app/ticket-service"
        environment:
            - NODE_ENV=production
            - LOCAL=no
        ports:
            - 3006:3006
        command: sh -c "npm install && npm start"
        depends_on: 
            - mongodb
        networks:
            - scalable_network
    
    ms-camunda:
        image: node:lts-alpine
        container_name: camunda
        working_dir: /home/app/camunda-service
        volumes: 
            - "./configuration:/home/app/common"
            - "./backend/camunda-service:/home/app/camunda-service"
        environment:
            - NODE_ENV=production
            - LOCAL=no
        ports:
            - 8052:8052
        command: sh -c "npm install && npm start"
        depends_on: 
            - mongodb
        networks:
            - scalable_network
                  
    start_dependencies:
        image: dadarek/wait-for-dependencies
        container_name: wait-for-it
        depends_on:
            - "mongodb"
        command: mongodb:27017
        networks:
            - scalable_network

networks:
    scalable_network:
        external:
            name: scalable_network