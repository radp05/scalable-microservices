version : '3'
services :
    portal:
        image: nginx:alpine
        container_name: portal
        working_dir: /usr/share/nginx/html
        volumes:
            - "./frontend/nginx.conf:/etc/nginx/nginx.conf"
            - "./frontend/portal/dist/portal:/usr/share/nginx/html"
        ports: 
            - 4200:80
        networks:
            - scalable_network

    egateway:
        image: express-gateway
        container_name: egateway
        working_dir: /home/app/express-gateway
        volumes: 
            - ./egateway:/home/app/express-gateway
            - ./backend/microservices/common:/home/app/common
        environment:
            - NODE_ENV=production
        ports:
            - 80:80
            - 443:443
        command: sh -c "npm install && npm start"
        networks:
            - scalable_network
    
    mongodb:
        image: mongo
        container_name: mongodb
        environment:
            - MONGO_INITDB_DATABASE=admin
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=Root123
        ports:
            - '27017:27017'
        volumes:
            - './mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro'
            - './mongodb/data:/data/db'
        networks:
            - scalable_network

    ms-sample:
        image: node:lts-alpine
        container_name: sample
        working_dir: /home/app/sample-service
        volumes: 
            - "./settings:/home/app/common"
            - "./backend/microservices/sample-service:/home/app/sample-service"
        environment:
            - NODE_ENV=production
            - LOCAL=no
        ports:
            - 3000:3000
        command: sh -c "npm install && npm start"
        depends_on: 
            - mongodb
        networks:
            - scalable_network

    ms-admin:
        image: node:lts-alpine
        container_name: admin
        working_dir: /home/app/admin-service
        volumes: 
            - "./settings:/home/app/common"
            - "./backend/microservices/admin-service:/home/app/admin-service"
        environment:
            - NODE_ENV=production
            - LOCAL=no
        ports:
            - 3003:3003
        command: sh -c "npm install && npm start"
        depends_on: 
            - mongodb
        networks:
            - scalable_network
    
    ms-devices:
        image: node:lts-alpine
        container_name: device
        working_dir: /home/app/devices-service
        volumes: 
            - "./settings:/home/app/common"
            - "./backend/microservices/devices-service:/home/app/devices-service"
        environment:
            - NODE_ENV=production
            - LOCAL=no
        ports:
            - 3001:3001
        command: sh -c "npm install && npm start"
        depends_on: 
            - mongodb
        networks:
            - scalable_network

    ms-devices:
        image: node:lts-alpine
        container_name: ticket
        working_dir: /home/app/ticket-service
        volumes: 
            - "./backend/microservices/common:/home/app/common"
            - "./backend/microservices/ticket-service:/home/app/ticket-service"
        environment:
            - NODE_ENV=production
            - LOCAL=no
        ports:
            - 3004:3004
        command: sh -c "npm install && npm start"
        depends_on: 
            - mongodb
        networks:
            - scalable_network
        
    ms-orders:
        image: node:lts-alpine
        container_name: order
        working_dir: /home/app/orders-service
        volumes: 
            - "./settings:/home/app/common"
            - "./backend/microservices/orders-service:/home/app/orders-service"
        environment:
            - NODE_ENV=production
            - LOCAL=no
        ports:
            - 3002:3002
        command: sh -c "npm install && npm start"
        depends_on: 
            - mongodb
        networks:
            - scalable_network
        
    start_dependencies:
        image: dadarek/wait-for-dependencies
        container_name: wait-for-it
        depends_on:
            - "mongodb"
        command: mongodb:27017
        networks:
            - scalable_network

networks:
    scalable_network: