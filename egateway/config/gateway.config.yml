http:
  port: 80

https:
  port: 443
  tls:
    default:
      key: "./config/certs/ss-key.pem"
      cert: "./config/certs/ss-cert.pem"
      ca: ["./config/certs/ss-csr.pem"]

apiEndpoints:
  # api:
  #   paths: '/ip'
  sample:
    paths: '/api/v1/sample/*'
  device:
    paths: '/api/v1/device/*'
  ticket:
    paths: '/api/v1/ticket/*'
  order:
    paths: '/api/v1/order/*'
  admin:
    paths: '/api/v1/admin/*'
  forms:
    paths: '/api/v1/forms/*'
  files:
    paths: '/api/v1/files/*'
  auth:
    paths: '/api/v1/auth/*'

serviceEndpoints:
  # httpbin:
  #   url: 'https://httpbin.org'
  sampleService:
    url: 'http://sample:3000'
  authService:
    url: 'http://auth:4000'
  deviceService:
    url: 'http://devices:3001'
  ticketService:
    url: 'http://tickets:3006'
  orderService:
    url: 'http://orders:3002'
  adminService:
    url: 'http://admin:8000'
  fileService:
    url: 'http://files:3004'
  formService:
    url: 'http://forms:3005'

policies:
  - basic-auth
  - cors
  - expression
  - egateway-logger
  - jwt
  - proxy
  - rate-limit

pipelines:
  # - default:
  #   apiEndpoints:
  #     - api
  #   policies:
  #     - egateway-logger:
  #     - jwt:
  #       - action:
  #           secretOrPublicKey: ${JWT_SECRET}
  #           checkCredentialExistence: false
  #     - proxy:
  #         - action:
  #             serviceEndpoint: httpbin 
  #             changeOrigin: true

  - name: sample
    apiEndpoints:
      - sample
    policies:
      - egateway-logger:
      - proxy:
        - action:
            serviceEndpoint: sampleService
            changeOrigin: true
  
  - name: auth
    apiEndpoints:
      - auth
    policies:
      - egateway-logger:
      - proxy:
        - action:
            serviceEndpoint: authService
            changeOrigin: true
          
  - name: device
    apiEndpoints:
      - device
    policies:
      - egateway-logger:
      - jwt:
        - action:
            secretOrPublicKey: ${JWT_SECRET}
            checkCredentialExistence: false
      - proxy:
        - action:
            serviceEndpoint: deviceService
            changeOrigin: true

  - name: forms
    apiEndpoints:
      - forms
    policies:
      - egateway-logger:
      - jwt:
        - action:
            secretOrPublicKey: ${JWT_SECRET}
            checkCredentialExistence: false
      - proxy:
        - action:
            serviceEndpoint: formService
            changeOrigin: true
    
  - name: files
    apiEndpoints:
      - files
    policies:
      - egateway-logger:
      - jwt:
        - action:
            secretOrPublicKey: ${JWT_SECRET}
            checkCredentialExistence: false
      - proxy:
        - action:
            serviceEndpoint: fileService
            changeOrigin: true

  - name: ticket
    apiEndpoints:
      - ticket
    policies:
      - egateway-logger:
      - jwt:
        - action:
            secretOrPublicKey: ${JWT_SECRET}
            checkCredentialExistence: false
      - proxy:
        - action:
            serviceEndpoint: ticketService
            changeOrigin: true

  - name: order
    apiEndpoints:
      - order
    policies:
      - egateway-logger:
      - jwt:
        - action:
            secretOrPublicKey: ${JWT_SECRET}
            checkCredentialExistence: false
      - proxy:
        - action:
            serviceEndpoint: orderService
            changeOrigin: true
    
  - name: admin
    apiEndpoints:
      - admin
    policies:
      - egateway-logger:
      - jwt:
        - action:
            secretOrPublicKey: ${JWT_SECRET}
            checkCredentialExistence: false
      - proxy:
        - action:
            serviceEndpoint: adminService
            changeOrigin: true
